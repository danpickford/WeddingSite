{
  "author": {
    "name": "David Wee",
    "email": "rook2pawn@gmail.com",
    "url": "http://rook2pawn.com"
  },
  "name": "easing",
  "description": "Easing Functions Without the Framework Cruft",
  "version": "0.0.4",
  "keywords": [
    "easing",
    "animation",
    "tween"
  ],
  "homepage": "https://github.com/rook2pawn/node-easing",
  "repository": {
    "type": "git",
    "url": "git@github.com:rook2pawn/node-easing.git"
  },
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {},
  "readme": "![easing](https://github.com/rook2pawn/node-easing/raw/master/graph.png)\n\neasing\n======\n\nEasing functions simply describe functions that are used for the purpose of easing.\nGive it an array of arbitrary size and it fills those values. \n\nLoad it up\n==========\n    \n    Simply include browser-easing.js and you can require('easing') directly in your client side code.\n\n\nSimple\n======\n\n    var x = Easing(11,'cubic');\n\n\n    And there you have it, an array of eleven elements whose value starts at 0 and ends at 1 which are populated with\n    cubic easing values.\n\n    [ 0,\n        0.0010000000000000002,\n        0.008000000000000002,\n        0.02700000000000001,\n        0.06400000000000002,\n        0.125,\n        0.21600000000000008,\n        0.3430000000000001,\n        0.5120000000000001,\n        0.7290000000000001,\n    1 ]\n\n\nTypes of Easing\n===============\n\nLinear\n------\n\nFor an array of 42 values that are linear, \n\n    Easing(42,'linear')\n\n \nQuadratic\n---------\n\nFor an array of 100 values that are quadratic,\n\n    Easing(100,'quadratic')\n\n \nCubic\n-----\n\nFor an array of 42 cubic values,\n    \n    Easing(42,'cubic')\n\nQuartic\n-------\n\nFor an array of 1492 quartic values,\n\n    Easing(1492,'quartic')\n\nQuintic\n-------\n\n    Easing(25,'quintic')\n\n\nSinusoidal\n----------\n    \n    Easing(333,'sinusoidal')\n    Easing(333,'sin')\n\nCircular\n--------\n    \n    Easing(314,'circular')\n\n\nExponential\n-----------\n    \n    Easing(81,'exponential')\n\n\n\nOptional options\n================\n\nEnd To End\n----------\n\nIf we wanted to go from 0 to 1 back to 0 quadratically, simply call \n\n    Easing(100,'quadratic',{endToEnd:true});\n\nInvert\n------\n\nIf we want to go from 1 to 0 (or 1 to 0 back to 1) instead of 0 to 1, say 'linear' style, simply call \n\n    Easing(100,'linear',{invert:true});\n\nYou can mix and match these options.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rook2pawn/node-easing/issues"
  },
  "_id": "easing@0.0.4",
  "dist": {
    "shasum": "8f746838e97f5fc60ebac60a08799502ff8143b9"
  },
  "_from": "easing@",
  "_resolved": "https://registry.npmjs.org/easing/-/easing-0.0.4.tgz"
}
